name: flutter-with-dependencies
base: core22 # the base snap is the execution environment for this snap
version: '0.1'
summary: Minimal template app to test/debug dependencies
description: |
  See summary

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

apps:
  flutter-with-dependencies:
    command: bin/example # I don't get when we have to prefix with bin/ but in this case I had to
    plugs: [home, desktop, desktop-legacy, network, network-bind, opengl, x11, audio-playback]
    extensions: [gnome]

parts:
  # We build our own flutter to be able to build our flutter application.
  # Notice the override-prime, so that the output of this doesn't end up in the snap itself.
  # It is also possible to use the flutter of snapcraft (I guess in the core package?), but this is not necessarily up-to-date.
  # This was inspired by https://github.com/ubuntu-flutter-community/software/blob/main/snap/snapcraft.yaml
  flutter-git:
    source: https://github.com/flutter/flutter.git
    source-tag: 3.16.3
    source-depth: 1
    plugin: nil
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/usr/bin
      mkdir -p $CRAFT_PART_INSTALL/usr/libexec
      cp -r $CRAFT_PART_SRC $CRAFT_PART_INSTALL/usr/libexec/flutter
      ln -s $CRAFT_PART_INSTALL/usr/libexec/flutter/bin/flutter $CRAFT_PART_INSTALL/usr/bin/flutter
      ln -s $SNAPCRAFT_PART_INSTALL/usr/libexec/flutter/bin/dart $SNAPCRAFT_PART_INSTALL/usr/bin/dart
      $CRAFT_PART_INSTALL/usr/bin/flutter doctor
    build-packages:
      - clang
      - cmake
      - curl
      - libgtk-3-dev
      - ninja-build
      - unzip
      - xz-utils
      - zip
    override-prime: ''

  flutter-with-dependencies:
    after: [flutter-git]
    source: .
    plugin: nil
    override-build: |
      # when building locally artifacts can pollute the container and cause builds to fail
      # this helps increase reliability for local builds
      flutter clean
      # work around pub get stack overflow # https://github.com/dart-lang/sdk/issues/51068#issuecomment-1396588253
      set +e
      dart pub get
      set -eux
      export BUILD_TYPE=debug

      flutter build linux --$BUILD_TYPE -v
      echo $CRAFT_PART_INSTALL
      mkdir -p $CRAFT_PART_INSTALL/bin/
      ls build/linux/*/$BUILD_TYPE/bundle/*
      cp -r build/linux/*/$BUILD_TYPE/bundle/* $CRAFT_PART_INSTALL/bin/
      ls $CRAFT_PART_INSTALL/bin/
